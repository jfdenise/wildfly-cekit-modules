name: Wildfly Cekit OpenShift Modules - Build/Run WildFly s2i image on the changes introduced in the PR. 
on:
  pull_request:
     branches: [ v2 ]
env:
  LANG: en_US.UTF-8
  S2I_URI: https://api.github.com/repos/openshift/source-to-image/releases/latest
  CEKIT_VERSION: 3.2.1
jobs:
  wfci:
    name: Wildfly-s2i Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Update hosts - linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          cat /etc/hosts
          sudo bash -c "echo '127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4' > /etc/hosts"
          sudo bash -c "echo '::1         localhost localhost.localdomain localhost6 localhost6.localdomain6' >> /etc/hosts"
          sudo sysctl -w fs.file-max=2097152
      - uses: actions/checkout@v2
        with:
          path: wildfly-cekit-modules
      - uses: actions/checkout@v2
        with:
            repository: wildfly/wildfly-s2i
            ref: v2
            path: wildfly-s2i
      - uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Verify latest ubi8-minimal and openjdk-11-runtime images are present
        run: |
          docker pull registry.access.redhat.com/ubi8/openjdk-11-runtime
          docker pull registry.access.redhat.com/ubi8/ubi-minimal
          docker image ls | grep ubi8
      - name: Setup required system packages
        run: |
          sudo apt-get update
          sudo apt-get install krb5-multidev
      - name: Setup Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Setup virtualenv and install cekit and required packages
        run: |
          python --version
          sudo pip install virtualenv
          mkdir ~/cekit${{ env.CEKIT_VERSION }}
          python3 -m venv ~/cekit${{ env.CEKIT_VERSION }}
          . ~/cekit${{ env.CEKIT_VERSION }}/bin/activate
          pip install cekit==${{ env.CEKIT_VERSION }} docker docker-squash odcs behave lxml 
      - name: install s2i binary
        run: |
          echo ===== Installing s2i from ${{ env.S2I_URL }} =====
          mkdir /tmp/s2i/ && cd /tmp/s2i/
          curl -s ${{ env.S2I_URI }} \
           | grep browser_download_url \
           | grep linux-amd64 \
           | cut -d '"' -f 4 \
           | wget -qi -
           tar xvf source-to-image*.gz
           sudo mv s2i /usr/bin
           which s2i
           s2i version
      - name: Build 
        run: |
          . ~/cekit${{ env.CEKIT_VERSION }}/bin/activate
          overrides="{\"modules\": {\"repositories\": [{\"name\":\"wildfly-cekit-modules\",\"path\":\"../../wildfly-cekit-modules\"}]}}"
          pushd wildfly-builder-image
          cekit build --overrides "$overrides" docker
          popd
          pushd wildfly-runtime-image
          cekit build --overrides "$overrides"  docker
          popd
          docker image ls
        working-directory: wildfly-s2i
      - name: Behave Tests
        run: |
          . ~/cekit${{ env.CEKIT_VERSION }}/bin/activate
          pushd wildfly-builder-image
          cekit -v test behave
          popd
        working-directory: wildfly-s2i
      - name: Additional Tests
        run: |
          export IMAGE_VERSION=dev
          export NAMESPACE=wildfly
          export IMAGE_NAME=${NAMESPACE}/wildfly-s2i-jdk11
          export RUNTIME_IMAGE_NAME=${NAMESPACE}/wildfly-runtime-jre11
          . ~/cekit${{ env.CEKIT_VERSION }}/bin/activate
          ./test/run
        working-directory: wildfly-s2i
      - name: List containers
        if: failure()
        run: |
            echo === RUNNING CONTAINERS ===
            docker container ls
            echo === RUNNING PROCESSES ===
            top -b -n1
            echo === DISK USAGE ===
             df -h
